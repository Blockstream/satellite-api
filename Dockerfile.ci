# docker build --cache-from blockstream/satapi-builder@sha256:35b3d427bc205407410eb4fbaa4c1865306d241a7a8b4d5d57ca4ec1926b373d -t blockstream/satapi-builder:latest -f Dockerfile.ci .

FROM docker@sha256:bc7f740e2c0a8a9ec43b009b7cd35aafb10e69488a017110ad723003fbd3a7ae AS docker
FROM alpine:latest

COPY --from=docker /usr/local/bin/docker /usr/local/bin/docker

RUN apk --no-cache add curl python python3 py-crcmod bash libc6-compat openssh-client git gnupg

ENV RUBY_PACKAGES ruby ruby-io-console ruby-irb ruby-rake ruby-bundler ruby-bigdecimal ruby-json
ENV RUBY_DEPS libstdc++ tzdata bash ca-certificates openssl sqlite sqlite-dev

RUN apk update && \
    apk upgrade && \
    apk --update add $RUBY_PACKAGES $RUBY_DEPS && \
    echo 'gem: --no-document' > /etc/gemrc

RUN mkdir /app && \
    mkdir -p /data/ionosphere

COPY . /app
WORKDIR /app

# install packages needed for building compiled gems; install gems; then delete build dependencies to keep Docker image small
ENV BUILD_PACKAGES sudo build-base ruby-dev libc-dev linux-headers openssl-dev
RUN apk --update add --virtual build_deps $BUILD_PACKAGES && \
    bundle update --bundler && \
    bundle install && \
    apk del build_deps && \
    rm -rf /var/cache/apk/*

